let express,auth,admin,registercontroller,refreshcontroller,productcontroller,logincontroller,usercontroller,ordercontroller;_624‍.x([["default",()=>_624‍.o]]);_624‍.w("express",[["default",["express"],function(v){express=v}]]);_624‍.w("../middlewares/auth",[["default",["auth"],function(v){auth=v}]]);_624‍.w("../middlewares/admin",[["default",["admin"],function(v){admin=v}]]);_624‍.w("../controller",[["registercontroller",["registercontroller"],function(v){registercontroller=v}],["refreshcontroller",["refreshcontroller"],function(v){refreshcontroller=v}],["productcontroller",["productcontroller"],function(v){productcontroller=v}],["logincontroller",["logincontroller"],function(v){logincontroller=v}],["usercontroller",["usercontroller"],function(v){usercontroller=v}],["ordercontroller",["ordercontroller"],function(v){ordercontroller=v}]]);


const router = express.Router();



router.post('/register', registercontroller.register);
router.post('/login', logincontroller.login);
router.get('/me',auth, usercontroller.me);
router.post('/refresh', refreshcontroller.refresh);
router.post('/logout',auth, logincontroller.logout);


router.post('/products',[auth,admin], productcontroller.store);
router.put('/products/:id', [auth, admin], productcontroller.update);
router.delete('/products/:id', [auth, admin], productcontroller.destroy);
router.get('/products', productcontroller.index);
router.get('/products/:id', productcontroller.show);


router.post('/status',ordercontroller.status);
router.post('/order',ordercontroller.order);

_624‍.d(router); 