let Joi,CustomErrorHandler,User,bcrypt,JwtService;_67a‍.x([["default",()=>_67a‍.o]]);_67a‍.w("joi",[["default",["Joi"],function(v){Joi=v}]]);_67a‍.w("../../services/CustomErrorHandler",[["default",["CustomErrorHandler"],function(v){CustomErrorHandler=v}]]);_67a‍.w("../../models",[["User",["User"],function(v){User=v}]]);_67a‍.w("bcrypt",[["default",["bcrypt"],function(v){bcrypt=v}]]);_67a‍.w("../../services/JwtService",[["default",["JwtService"],function(v){JwtService=v}]]);






const usercontroller = {
    async me(req,res,next){ 
        
        try {
            const user = await User.findOne({_id:req.user._id},{password:0,updatedAt:0,__v:0});
            _67a‍.g.console.log(user);
            if(!user){
                console.log("no user");
                return next(CustomErrorHandler.notfound());
            }
            res.json(user);
        } catch (error) {
            return next(error);
        }
    }
} 

_67a‍.d(usercontroller);